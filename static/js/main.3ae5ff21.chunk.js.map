{"version":3,"sources":["dashboard.jsx","app.jsx","card.jsx","arcInfo.jsx","generateVis.js","serviceWorker.js","index.js"],"names":["EditableCell","initialValue","value","index","row","column","id","updateMyData","width","useState","setValue","useEffect","className","onChange","e","target","stopPropagation","onBlur","Table","columns","data","skipPageReset","useTable","autoResetExpanded","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","i","getRowProps","cells","cell","style","getCellProps","drawing","offset","p","HighlightButton","props","onClick","fire","_memory","_selectHandler","pointSelection","isSelected","Dashboard","arcArray","arcDispatch","React","useMemo","Header","accessor","Cell","obj","JSON","stringify","initState","slice","setSkipPageReset","rowIndex","columnId","type","toLowerCase","res","config","parseInt","length","push","text","splice","EDIT_ARC_PARAMS","field","copy","parse","border","padding","marginBottom","backgroundColor","cursor","Card","moveCard","ref","useRef","useDrop","accept","hover","item","monitor","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","collect","isDragging","opacity","drag","ArcInfo","arcs","ui","dispatch","sel","focusArc","cards","setCards","useCallback","dragCard","newdata","update","$splice","card","idx","key","renderCard","range","start","stop","xstep","ystep","a","b","checkidx","dist","Math","sqrt","cumsum","arr","acc","runScript","script","runState","wasteValveId","Object","values","find","name","mergeFluids","tub","RXXVol","bulkVol","updateState","path","lineVolumes","lineStates","line","reverse","volume","cumLineVols","cumFluidVols","first","second","f","s","c","merge","getCumulativeVol","combinedVols","d","newSeg","j","includes","drawState","arc","plot","dispPlot","factor","lw","prec","elements","fl","elength","pointDist","genEle","geom","state","eleCount","segEleCount","totalVol","reduce","midIdx","segStartIdx","floor","Array","fill","genSeg","boundaryPts","polyline","stroke","color","reagents","toPrecision","font","size","move","lineExecTable","Valve","param","genPlot","k","valveStateName","valveStates","ValvePortMapping","valves","vName","vId","name2Id","connections","activeConnections","Port","powered","ValvePositions","setValves","Pull","aspVol","pumpId","startId","stack","nodes","pop","prevLine","nodeIdx","node","arcIds","valveArc","arcId","downStNdIdx","elevatorUp","dfsPath","last","remove","group","forEach","svgHandle","linePlot","toString","svg","Dispense","ElevatorDown","ElevatorUp","Wait","window","filter","rotate","dmove","split","endfound","n","m","line2","initValve","elem","attr","cx","cy","keys","x","updateNeighbors","coord","ignore","resObj","assign","newconf","val","configTxt","txt","plugged_ele","plugged_idx","shift","stateReducer","newState","payload","array","valueOf","indexOf","idx2","App","useReducer","store","forceUpdate","hackyScript","setHackyScript","configFile","setConfigFile","configText","setConfigText","setScriptFile","getCoincidentPt","button","clientX","pageXOffset","clientY","pageYOffset","newPt","matrixTransform","getScreenCTM","inverse","arcArr","this","cross","dot","ab_squared","abs","selectize","deepSelect","getDeletePt","detail","event","lastIdx","loadScript","document","getElementById","addEventListener","preventDefault","SVG","panZoom","zoomFactor","zoomMin","zoomMax","fileSelect","importfile","click","loadExampleConfig","scriptSelect","importScript","children","noDispatch","keyCode","createSVGPoint","attachLineHandlers","addClass","on","undefined","off","bind","pos","attachValveHandlers","back","radius","draggable","snapToGrid","simulateClick","console","log","endDraw","Date","getUTCMilliseconds","draw","temp","circle","center","removeEventListener","blob","Blob","url","URL","createObjectURL","element","createElement","setAttribute","display","body","appendChild","removeChild","blur","reader","FileReader","onload","loadBlob","result","preStore","entries","clear","fetch","then","response","loadExampleScript","setEdit","setFrames","frames","xxx","sidebar","setSidebar","edit","title","files","readAsText","min","max","step","DndProvider","backend","HTML5Backend","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3ae5ff21.chunk.js","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport './dashboard.css'\nimport { useTable } from 'react-table'\nimport {EDIT_ARC_PARAMS} from './app'\n\nconst EditableCell = ({\n  value: initialValue,\n  row: { index },\n  column: { id , width},\n  updateMyData\n}) => {\n  // debugger\n  const [value, setValue] = useState(initialValue)\n\n  const onChange = e => {\n    setValue(e.target.value)\n    e.stopPropagation()\n  }\n  \n  const onBlur = () => {\n    updateMyData(index, id, value)\n  }\n\n  // If the initialValue is changed external, sync it up with our state\n  useEffect(() => {\n    setValue(initialValue)\n  }, [initialValue])\n\n  return <input className={id} value={value} onChange={onChange} onBlur={onBlur} />\n}\n\nfunction Table({ columns, data, updateMyData,skipPageReset}) {\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n\n  } = useTable(\n    {\n      columns,\n      data,\n      autoResetExpanded: !skipPageReset,\n      updateMyData,\n    },\n  )\n\n\n\n  return (\n    <>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th width={column.width} {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(\n            (row, i) =>\n              prepareRow(row) || (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map(cell => {\n                    // debugger\n                    return (\n                      <td style={{width:`${cell.column.width}px`}} {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                    );\n                  })}\n                </tr>\n              )\n          )}\n        </tbody>\n      </table>\n    </>\n  )\n}\n\nconst HighlightButton = (props) => {\n  const onClick = e => {\n    props.value.fire('dblclick')\n  }\n  // debugger\n  return <div className=\"selectBut\" onClick={onClick}>\n       {props.value._memory && props.value._memory._selectHandler  && props.value._memory._selectHandler.pointSelection.isSelected ? \"\\u2713\":\"\"}\n  </div>\n}\n\nconst Dashboard = ({arcArray, arcDispatch}) => {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: '#',\n        accessor: (row, i) => i,\n        width:15\n      },\n      {\n        Header: '\\u2713',\n        accessor: 'svgHandle',\n        Cell: HighlightButton,\n        width:15\n      },\n      {\n        Header: 'Name',\n        Cell: EditableCell,\n        accessor: 'name',\n        width:100\n      },\n      {\n        Header: 'Type',\n        Cell: EditableCell,\n        accessor: 'type',\n        width:80\n      },\n      {\n        Header: 'Volume',\n        Cell: EditableCell,\n        accessor: 'volume',\n        width:60\n      },\n      {\n        Header: 'State',\n        Cell: EditableCell,\n        id:'initState',\n        accessor: (obj) => JSON.stringify(obj.initState).slice(1,-1),\n        width:240\n      },\n    ],\n    []\n  )\n\n  const [skipPageReset, setSkipPageReset] = React.useState(false)\n\n\n  const updateMyData = (rowIndex, columnId, value) => {\n    if (columnId === 'Connections') return\n\n\n    if (columnId === 'volume' \n    && arcArray[rowIndex].type.toLowerCase() === \"valve\" \n    ) {\n      \n      const res = [...arcArray[rowIndex].config]\n\n      if (parseInt(value) > res.length ) {\n        for (let i= res.length; i<parseInt(value); i++) {\n          res.push({id:res.length,text:'plugged'})\n        }\n      } else {\n        for (let i= res.length-1; i>=0; i--) {\n          if (res.length === parseInt(value)) break\n          if (res[i].text === \"plugged\") res.splice(i,1)\n        }\n\n      }\n\n      arcDispatch([EDIT_ARC_PARAMS,\n        {\n          id:arcArray[rowIndex].id,\n          field:'config',\n          data:res\n        }\n      ])\n    }\n\n    let copy = value\n    if (columnId === 'volume') copy = JSON.parse(copy)\n    if (columnId === 'initState') copy = JSON.parse(`[${copy}]`)\n    arcDispatch([EDIT_ARC_PARAMS,\n      {\n        id:arcArray[rowIndex].id,\n        field:columnId,\n        data:copy\n      }\n    ])\n  }\n\n  // After data changes, we turn the flag back off\n  // so that if data actually changes when we're not\n  // editing it, the page is reset\n  React.useEffect(() => {\n    setSkipPageReset(false)\n  }, [arcArray])\n\n  return (\n\n      <Table\n        columns={columns}\n        data={arcArray}\n        updateMyData={updateMyData}\n        skipPageReset={skipPageReset}\n      />\n\n  )\n\n}\n\nexport default Dashboard","import React, { useState, useEffect, useReducer } from 'react';\nimport Dashboard from './dashboard'\n\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { ArcInfo } from './arcInfo'\nimport { runScript } from './generateVis'\n\n\n// let config = fs.readFileSync(path.resolve(__dirname, 'config.txt'), 'utf8')\n// let script = fs.readFileSync(path.resolve(__dirname, 'script.txt'), 'utf8')\n\n\nlet drawing;\nlet canvasTranform, offset, p\n\nconst EDIT_ARC_GEOM = 'EDIT_ARC_GEOM'\nexport const EDIT_ARC_PARAMS = 'EDIT_ARC_PARAMS'\nconst REC_POLYS = 'REC_POLYS'\nconst INIT_LINE = 'INIT_LINE'\nconst INIT_VALVE = 'INIT_VALVE'\nconst DEL_ARC = 'DEL_ARC'\nconst ADD_TO_NODE = 'ADD_TO_NODE'\nconst DEL_FROM_NODE = 'DEL_FROM_NODE'\nconst ADD_FOCUS_ARC = 'ADD_FOCUS_ARC'\nconst DEL_FOCUS_ARC = 'DEL_FOCUS_ARC'\nconst CLEAR_FOCUS_ARC = 'CLEAR_FOCUS_ARC'\nconst REC_ARCS = 'REC_ARCS'\n\n\nconst initLine = (elem) => ({\n  id: elem.node.id,\n  type: 'line',\n  svgHandle: elem,\n  name: elem.node.id,\n  geom: elem.array().valueOf(),\n  volume: 90,\n  initState: [[\"HPLC\", 90]],\n  connections: [{}, {}],\n})\n\nconst initValve = (elem) => ({\n  id: elem.attr().id,\n  type: 'valve',\n  name: elem.attr().id,\n  geom: [[elem.attr().cx, elem.attr().cy]],\n  volume: 3,\n  initState: [],\n  connections: [{}],\n  config: [...Array(3).keys()].map(x => ({ id: x, text: 'plugged' })),\n  svgHandle: elem,\n})\n\nconst updateNeighbors = ({ arcs, nodes }, coord, ignore) => {\n\n  for (let arcId of nodes[coord].arcs) {\n    if (arcId === ignore) continue\n    arcs = {\n      ...arcs,\n      [arcId]: {\n        ...arcs[arcId],\n        connections: [\n          ...arcs[arcId].connections\n        ]\n      }\n    }\n\n    let idx\n    if (arcs[arcId].type === 'valve') {\n      idx = 0\n    } else {\n      idx = coord.toString() === arcs[arcId].geom[0].toString() ? 0 : 1\n    }\n\n    const resObj = {}\n\n    nodes[coord].arcs\n      .filter(e => e !== arcId)\n      .forEach(\n        (e) => Object.assign(resObj, { [arcs[e].name]: e })\n      )\n    arcs[arcId].connections[idx] = resObj\n\n    if (arcs[arcId].type === 'valve') {\n      let newconf = [...arcs[arcId].config]\n      // check connection for presence of each config\n      for (let j = 0; j < newconf.length; j++) {\n        if (newconf[j].text === \"plugged\") continue\n        if (!Object.keys(arcs[arcId].connections[idx]).includes(newconf[j].text)) {\n\n          newconf.splice(j, 1, { text: \"plugged\", id: 99 })\n\n          newconf = newconf.map((val, idx) => ({ text: val.text, id: idx }))\n        }\n      }\n\n      const configTxt = newconf.map(e => e.text).filter(txt => txt !== \"plugged\")\n      const plugged_ele = newconf.filter(e => e.text === \"plugged\")\n      // check config for presence of each connection\n      for (let val of Object.keys(arcs[arcId].connections[idx])) {\n        if (!configTxt.includes(val)) {\n          const plugged_idx = plugged_ele.shift().id\n          newconf.splice(plugged_idx, 1, { id: plugged_idx, text: val })\n        }\n      }\n\n      arcs[arcId].config = newconf\n    }\n\n  }\n  return arcs\n}\n\nconst stateReducer = (state, [type, payload]) => {\n  var newState\n  switch (type) {\n    case INIT_LINE:\n      return {\n        ...state,\n        arcs: {\n          ...state.arcs,\n          [payload.node.id]: initLine(payload)\n        }\n      };\n    case INIT_VALVE:\n      return {\n        ...state,\n        arcs: {\n          ...state.arcs,\n          [payload.attr().id]: initValve(payload)\n        }\n      };\n    case DEL_ARC:\n      newState = {\n        ...state,\n        arcs: {\n          ...state.arcs,\n        }\n      }\n      delete newState.arcs[payload]\n      return newState;\n    case EDIT_ARC_GEOM:\n      return {\n        ...state,\n        arcs: {\n          ...state.arcs,\n          [payload.arcId]:\n          {\n            ...state.arcs[payload.arcId],\n            geom: payload.geom,\n          }\n        }\n      };\n    case EDIT_ARC_PARAMS:\n      newState = {\n        ...state,\n        arcs: {\n          ...state.arcs,\n          [payload.id]: {\n            ...state.arcs[payload.id],\n            [payload.field]: payload.data\n          }\n        }\n      }\n      if (payload.field === 'name') {\n        const nodes = newState.arcs[payload.id].type === 'valve'\n          ? [0] : [0, newState.arcs[payload.id].geom.length - 1]\n        nodes.forEach(e => {\n          newState.arcs = updateNeighbors(\n            newState,\n            newState.arcs[payload.id].geom[e],\n            payload.id\n          )\n        })\n      }\n      return newState\n\n    case REC_POLYS:\n      return { ...payload, ui: { focusArc: [] } }\n    case REC_ARCS:\n      return { ...state, arcs: payload }\n\n    case ADD_TO_NODE:\n      if (payload.coord in state.nodes) {\n        newState = {\n          ...state,\n          nodes: {\n            ...state.nodes,\n            [payload.coord]: {\n              ...state.nodes[payload.coord],\n              arcs: [...state.nodes[payload.coord].arcs, payload.arcId],\n              valveArc: state.arcs[payload.arcId].type === 'valve'\n                ? payload.arcId : state.nodes[payload.coord].valveArc\n            }\n          }\n        }\n      } else {\n        newState = {\n          ...state,\n          nodes: {\n            ...state.nodes,\n            [payload.coord]: {\n              id: payload.coord,\n              arcs: [payload.arcId],\n              valveArc: state.arcs[payload.arcId].type === 'valve'\n                ? payload.arcId : null\n            }\n          }\n        }\n      }\n\n      newState.arcs = updateNeighbors(newState, payload.coord)\n\n      return newState\n\n    case DEL_FROM_NODE:\n      newState = {\n        ...state,\n        nodes: {\n          ...state.nodes,\n          [payload.coord]: {\n            ...state.nodes[payload.coord],\n            arcs: [...state.nodes[payload.coord].arcs],\n            valveArc: state.arcs[payload.arcId].type === 'valve'\n              ? null : state.nodes[payload.coord].valveArc\n          }\n        }\n      }\n\n      const idx = newState.nodes[payload.coord].arcs.indexOf(payload.arcId)\n      newState.nodes[payload.coord].arcs.splice(idx, 1)\n\n      newState.arcs = updateNeighbors(newState, payload.coord)\n      if (newState.nodes[payload.coord].arcs.length === 0) {\n        delete newState.nodes[payload.coord]\n        return newState\n      } else {\n        return newState\n      }\n\n    case ADD_FOCUS_ARC:\n      return {\n        ...state,\n        ui: {\n          ...state.ui,\n          focusArc: [...state.ui.focusArc, payload]\n        }\n      }\n\n    case DEL_FOCUS_ARC:\n      newState = [...state.ui.focusArc]\n      const idx2 = newState.indexOf(payload)\n      newState.splice(idx2, 1)\n      return {\n        ...state,\n        ui: {\n          ...state.ui,\n          focusArc: newState\n        }\n      }\n    case CLEAR_FOCUS_ARC:\n      return {\n        ...state,\n        ui: {\n          ...state.ui,\n          focusArc: []\n        }\n      }\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  // https://dev.to/scastiel/react-hooks-get-the-current-state-back-to-the-future-3op2\n  // https://overreacted.io/how-are-function-components-different-from-classes/\n  // https://adamrackis.dev/state-and-use-reducer/\n\n  const [store, dispatch] = useReducer(stateReducer, { arcs: {}, nodes: {}, ui: { focusArc: [] } });\n  const [_, forceUpdate] = useReducer(x => x + 1, 0);\n  const [hackyScript, setHackyScript] = useState(false);\n  const [configFile, setConfigFile] = useState('');\n  const [configText, setConfigText] = useState('');\n  const [scriptFile, setScriptFile] = useState('');\n\n  // window.store = store\n  // window.configFile = configFile\n\n  useEffect(()=> {\n    if (!hackyScript) return;\n    \n    loadScript(hackyScript)\n\n  },[hackyScript])\n\n  useEffect(() => {\n    const noContext = document.getElementById('canvas');\n    noContext.addEventListener('contextmenu', e => {\n      e.preventDefault();\n    });\n\n    drawing = window.SVG('canvas').size('100%', '100%')\n      .panZoom({\n        zoomFactor: .1,\n        zoomMin: 0.5,\n        zoomMax: 3\n      });\n\n    const fileSelect = document.getElementById(\"fileSelect\"),\n      importfile = document.getElementById(\"import\");\n\n    fileSelect.addEventListener(\"click\", function (e) {\n      if (importfile) {\n        importfile.click();\n      }\n    }, false);\n\n    document.getElementById('exampleDiag').addEventListener(\"click\", loadExampleConfig)\n\n    const scriptSelect = document.getElementById(\"scriptSelect\"),\n      importScript = document.getElementById(\"importScript\");\n\n    scriptSelect.addEventListener(\"click\", function (e) {\n      if (importScript) {\n        importScript.click();\n      }\n    }, false);\n\n    document.addEventListener('keydown', e => {\n      // if (e.keyCode === 27) {\n      if (e.key === 'Escape') {\n        for (let geom of drawing.children()) {\n          if (geom._memory\n            && geom._memory._selectHandler\n            && geom._memory._selectHandler.pointSelection.isSelected) {\n            geom.fire('dblclick', { noDispatch: true })\n          }\n        }\n        dispatch([CLEAR_FOCUS_ARC])\n        forceUpdate()\n\n      } else if (e.keyCode === 8) {\n        for (let geom of drawing.children()) {\n          if (geom._memory\n            && geom._memory._selectHandler\n            && geom._memory._selectHandler.pointSelection.isSelected) {\n\n            geom.fire('dblclick', { noDispatch: true })\n            if (geom.type !== 'circle') {\n              dispatch([\n                DEL_FROM_NODE,\n                { arcId: geom.node.id, coord: geom.array().valueOf()[0] }\n              ])\n              dispatch([\n                DEL_FROM_NODE,\n                {\n                  arcId: geom.node.id,\n                  coord: geom.array().valueOf()[geom.array().valueOf().length - 1]\n                }\n              ])\n            } else {\n              dispatch([DEL_FROM_NODE,\n                { arcId: geom.node.id, coord: [geom.attr().cx, geom.attr().cy] }])\n            }\n            dispatch([DEL_ARC, geom.node.id])\n            geom.remove()\n          }\n        }\n      }\n    })\n\n    canvasTranform = drawing.node.getScreenCTM().inverse();\n    offset = { x: window.pageXOffset, y: window.pageYOffset };\n    p = drawing.node.createSVGPoint();\n\n    window.drawing = drawing;\n\n\n  }, [])\n\n\n\n  function getCoincidentPt(e) {\n    if (e.button !== 2) return // early when not right click\n\n    p.x = e.clientX - (offset.x - window.pageXOffset);\n    p.y = e.clientY - (offset.y - window.pageYOffset)\n    const newPt = p.matrixTransform(drawing.node.getScreenCTM().inverse());\n\n    // https://stackoverflow.com/questions/328107/how-can-you-determine-a-point-is-between-two-other-points-on-a-line-segment\n    let arcArr = this.array().valueOf();\n    let a = {}, b = {}\n\n    for (let i = 0; i < arcArr.length - 1; i++) {\n      // first point of segment\n      a.x = arcArr[i][0]\n      a.y = arcArr[i][1]\n      // second point of segment\n      b.x = arcArr[i + 1][0]\n      b.y = arcArr[i + 1][1]\n\n      const cross = (newPt.y - a.y) * (b.x - a.x) - (newPt.x - a.x) * (b.y - a.y)\n      const dot = (newPt.x - a.x) * (b.x - a.x) + (newPt.y - a.y) * (b.y - a.y)\n      const ab_squared = (b.x - a.x) * (b.x - a.x) + (b.y - a.y) * (b.y - a.y)\n\n      if (Math.abs(cross) / Math.sqrt(ab_squared) > 2) {\n        continue\n      }\n\n      if (dot < 0) {\n        continue\n      }\n\n      if (dot > ab_squared) {\n        continue\n      }\n\n      arcArr.splice(i + 1, 0, [newPt.x, newPt.y])\n      this.plot(arcArr);\n      dispatch([EDIT_ARC_GEOM, { arcId: this.node.id, geom: arcArr }])\n\n      // update control pts, no noticeable performance hit\n      // there may be a better way to do this\n      this.selectize(false, { deepSelect: true })\n      this.selectize({ deepSelect: true })\n\n      break\n    }\n    // \n  }\n\n  function getDeletePt(e) {\n    if (e.detail.event.button !== 2) {\n      return // early when not right click\n    }\n\n    let arcArr = this.array().valueOf();\n    const lastIdx = arcArr.length - 1\n    const coord = arcArr[e.detail.i]\n    arcArr.splice(e.detail.i, 1)\n    this.plot(arcArr);\n    dispatch([EDIT_ARC_GEOM, { arcId: this.node.id, geom: arcArr }])\n\n    if (e.detail.i === 0) {\n      dispatch([DEL_FROM_NODE, { arcId: this.node.id, coord: coord }])\n      dispatch([ADD_TO_NODE, { arcId: this.node.id, coord: arcArr[0] }])\n    } else if (e.detail.i === lastIdx) {\n      dispatch([DEL_FROM_NODE, { arcId: this.node.id, coord: coord }])\n      dispatch([ADD_TO_NODE, { arcId: this.node.id, coord: arcArr[lastIdx - 1] }])\n    }\n\n    // update control pts, no noticeable performance hit\n    // there may be a better way to do this\n    this.selectize(false, { deepSelect: true })\n    this.selectize({ deepSelect: true })\n  }\n\n\n  const attachLineHandlers = (geom, dispatch) => {\n    geom.attr('stroke-width', 1)\n      .attr('fill', 'none')\n      .addClass('hover_line')\n      .on('dblclick', (e) => {\n        if (\n          geom._memory === undefined\n          || geom._memory._selectHandler === undefined\n          || !geom._memory._selectHandler.pointSelection.isSelected\n        ) {\n          geom.stroke({ color: 'red' })\n            .selectize({ deepSelect: true })\n            .on('mousedown', getCoincidentPt.bind(geom))\n            .on('point', getDeletePt.bind(geom))\n            .on('dragStart', (e) => {\n              const arcArr = geom.array().valueOf()\n              dispatch([DEL_FROM_NODE, { arcId: geom.node.id, coord: arcArr[e.detail.pos] }])\n            }\n            )\n            .on('dragEnd', (e) => {\n              const arcArr = geom.array().valueOf()\n              dispatch([EDIT_ARC_GEOM, { arcId: geom.node.id, geom: arcArr }])\n              if (e.detail.pos === 0 || e.detail.pos === arcArr.length - 1) {\n                dispatch([ADD_TO_NODE, { arcId: geom.node.id, coord: arcArr[e.detail.pos] }])\n              }\n            }\n            )\n          dispatch([ADD_FOCUS_ARC, geom.node.id])\n        } else {\n          geom.stroke({ color: 'black' })\n            .selectize(false, { deepSelect: true })\n            .off('mousedown')\n            .off('point')\n            .off('dragEnd')\n            .off('dragStart')\n          if (!e.detail || !e.detail.noDispatch) {\n            dispatch([DEL_FOCUS_ARC, geom.node.id])\n          }\n        }\n        if (!e.detail || !e.detail.noDispatch) {\n          dispatch([EDIT_ARC_PARAMS,\n            {\n              id: geom.node.id,\n              field: 'svgHandle',\n              data: geom\n            }\n          ])\n        }\n      }\n      )\n\n  }\n\n  const attachValveHandlers = (geom, dispatch) => {\n    geom.fill('white')\n      .stroke({ width: 1, color: 'red' })\n      .back()\n      .on('dblclick', (e) => {\n        if (\n          geom._memory === undefined\n          || geom._memory._selectHandler === undefined\n          || !geom._memory._selectHandler.pointSelection.isSelected\n        ) {\n          geom.radius(4)\n            .stroke({ width: 2, color: 'green' })\n            .selectize()\n            .draggable({ snapToGrid: 10 })\n            .on('dragstart', (e) => {\n              dispatch([\n                DEL_FROM_NODE,\n                {\n                  arcId: geom.attr().id,\n                  coord: [geom.attr().cx, geom.attr().cy]\n                }\n              ])\n            })\n            .on('dragend', (e) => {\n              const coord = [geom.attr().cx, geom.attr().cy]\n              dispatch([\n                EDIT_ARC_GEOM,\n                { arcId: geom.node.id, geom: [coord] }\n              ])\n              dispatch([\n                ADD_TO_NODE,\n                { arcId: geom.attr().id, coord }\n              ])\n            })\n\n          dispatch([ADD_FOCUS_ARC, geom.node.id])\n\n        } else {\n          geom.radius(3)\n            .stroke({ width: 1, color: 'red' })\n            .selectize(false)\n            .draggable(false)\n            .off('dragstart')\n            .off('dragend')\n\n          if (!e.detail || !e.detail.noDispatch) {\n            dispatch([DEL_FOCUS_ARC, geom.node.id])\n          }\n        }\n\n        if (!e.detail || !e.detail.noDispatch) {\n          dispatch([EDIT_ARC_PARAMS,\n            {\n              id: geom.node.id,\n              field: 'svgHandle',\n              data: geom\n            }\n          ])\n        }\n      })\n  }\n\n  const simulateClick = (event) => {\n    let geom;\n    const target = event.target\n    console.log(target)\n\n    const endDraw = (e) => {\n      // if (e.key!=\"Enter\") return;\n      // geom.id(Math.floor(Date.now()%31536000000/1000))\n      geom.id(\"l_\" + new Date().getUTCMilliseconds().toString(36))\n      geom.draw('done');\n      geom.off('drawstart');\n      // geom.fire('dblclick', { noDispatch: true })\n      dispatch([INIT_LINE, geom])\n\n      const arcArr = geom.array().valueOf()\n\n      dispatch([ADD_TO_NODE, { arcId: geom.node.id, coord: arcArr[0] }])\n      dispatch([ADD_TO_NODE, { arcId: geom.node.id, coord: arcArr[arcArr.length - 1] }])\n    }\n\n    if (target.value === \"valve\") {\n      drawing.on('mousedown', (e) => {\n        p.x = e.clientX - (offset.x - window.pageXOffset);\n        p.y = e.clientY - (offset.y - window.pageYOffset)\n        const newPt = p.matrixTransform(drawing.node.getScreenCTM().inverse());\n        let temp\n\n        for (var i in newPt) { // snapping algo\n          temp = newPt[i] % 10;\n          newPt[i] -= (temp < 10 / 2 ? temp : temp - 10) + (temp < 0 ? 10 : 0);\n        }\n\n        geom = drawing.circle(6)\n          .id(\"v_\" + new Date().getUTCMilliseconds().toString(36))\n          .center(newPt.x, newPt.y)\n        attachValveHandlers(geom, dispatch)\n        drawing.off('mousedown')\n        dispatch([INIT_VALVE, geom])\n        dispatch([\n          ADD_TO_NODE,\n          {\n            arcId: geom.attr().id,\n            coord: [geom.attr().cx, geom.attr().cy]\n          }\n        ])\n      })\n\n    } else if (target.value === \"line\") {\n      geom = drawing.polyline()\n      geom.draw({ snapToGrid: 10 })\n      attachLineHandlers(geom, dispatch)\n      geom.on('drawstart', () => document.addEventListener('keydown', endDraw))\n      // geom.on('drawstart', () => document.addEventListener('dblclick', endDraw))\n\n      geom.on('drawstop', () => document.removeEventListener('keydown', endDraw))\n      // geom.on('drawstop', () => document.removeEventListener('dblclick', endDraw))\n\n    }\n    else if (target.value === \"export\") {\n      const replacer = (key, value) => {\n        if (key === 'svgHandle') {\n          return undefined;\n        }\n        return value;\n      }\n\n      const blob = new Blob([JSON.stringify(store, replacer, 2)], { type: 'application/json' });\n      var url = window.URL.createObjectURL(blob);\n      var element = document.createElement('a');\n      element.setAttribute('href', url);\n      element.setAttribute('download', 'export.json');\n      element.style.display = 'none';\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n    }\n\n    target.blur()\n  }\n\n  let reader = new FileReader();\n  reader.onload = (e) => loadBlob(e.target.result)\n  const loadBlob = (blob) => {\n    let preStore = JSON.parse(blob)\n\n    for (let [key, obj] of Object.entries(preStore.arcs)) {\n      let geom\n      if (obj.type !== \"valve\") {\n        geom = drawing.polyline(obj.geom)\n          .id(key)\n\n        attachLineHandlers(geom, dispatch)\n      } else {\n        geom = drawing.circle(6)\n          .center(...obj.geom[0])\n          .id(key)\n\n        attachValveHandlers(geom, dispatch)\n      }\n\n      preStore.arcs[key].svgHandle = geom\n    }\n    dispatch([REC_POLYS, preStore])\n  }\n\n  const loadExampleConfig = (e) => {\n    drawing.clear()\n    fetch('config.json')\n      .then(response => {\n        return response.text()\n      })\n      .then(\n        txt => {\n          setConfigText(txt)\n          loadBlob(txt)\n        }\n      ).then(()=>{\n        loadExampleScript()\n      })\n  }\n\n  const loadExampleScript = (e) => {\n    fetch('script.txt')\n      .then(response => {\n        return response.text()\n      })\n      .then(\n        txt => {\n          setHackyScript(txt)\n        }\n      )\n  }\n\n\n  const selectAndLoadConfig = (e) => {\n    setConfigFile(e.target.files)\n    drawing.clear()\n    reader.readAsText(e.target.files[0]);\n  }\n\n  const reloadConfig = () => {\n    if (edit) {\n      drawing.svg(frames[document.getElementById('range').value])\n    } else {\n      drawing.clear()\n      if (configFile[0]) {\n        reader.readAsText(configFile[0]);\n      } else {\n        loadBlob(configText)\n      }\n    }\n\n    setEdit(e => !e)\n  }\n\n\n  let script = new FileReader();\n  script.onload = (e) => loadScript(e.target.result)\n  const loadScript = (blob) => {\n    setEdit(false)\n    const replacer = (key, value) => {\n      if (key === 'svgHandle') {\n        return undefined;\n      }\n      return value;\n    }\n    const runState = JSON.parse(JSON.stringify(store, replacer))\n    setFrames(runScript(blob.split('\\n'), runState, drawing))\n  }\n\n  const selectAndLoadScript = (e) => {\n    setScriptFile(e.target.files)\n    script.readAsText(e.target.files[0]);\n  }\n\n  const reloadScript = () => {\n    drawing.last().clear()\n    script.readAsText(scriptFile[0]);\n  }\n\n  const [frames, setFrames] = useState([])\n\n  window.xxx = frames;\n  window.runScript = () => { setFrames(runScript(store, drawing)) }\n  const [value, setValue] = useState(50)\n\n  const handleChange = (e) => {\n    setValue(e.target.value)\n    drawing.last().clear()\n    drawing.svg(frames[e.target.value])\n  }\n\n  const [sidebar, setSidebar] = useState(true)\n  const [edit, setEdit] = useState(true)\n\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"canvas-container\">\n        <div className=\"btn-group\" id=\"area\">\n          <button id=\"button1\" value='line' title=\"Add Line\" onClick={simulateClick}>\n            Add Line\n          </button>\n          <button id=\"button0\" value='valve' title=\"Add Valve\" onClick={simulateClick}>\n            Add Valve\n          </button>\n          <button id=\"button4\" value='export' title=\"Download Configuration\" onClick={simulateClick}>\n            Save Config\n          </button>\n          <button id=\"fileSelect\">Load Diagram</button>\n          <input type=\"file\" id=\"import\" onChange={selectAndLoadConfig}></input>\n\n          <button id=\"scriptSelect\">Load Script</button>\n          <input type=\"file\" id=\"importScript\" onChange={selectAndLoadScript}></input>\n\n          <button id=\"exampleDiag\">Load Example Diagram &amp; Script</button>\n          {/* <button id=\"button6\" title=\"reload\" onClick={reloadScript}>\n            Reload Script\n          </button> */}\n          <button id=\"button5\" title=\"reload\" onClick={reloadConfig}>\n            Toggle Edit/View\n          </button>\n          <button id=\"button6\" title=\"reload\" onClick={() => setSidebar(state => !state)}>\n            Toggle Sidebar\n          </button>\n        </div>\n        <div id=\"canvas\">\n        </div>\n        <input id=\"range\" type=\"range\" min=\"0\" max={frames.length} value={value} step=\"1\" onChange={handleChange} />\n\n\n\n      </div>\n\n\n      {\n        sidebar && <div className=\"sidebar\">\n\n          <Dashboard arcArray={Object.values(store.arcs)} arcDispatch={dispatch} />\n          <DndProvider backend={HTML5Backend} >\n            <ArcInfo\n              arcs={store.arcs}\n              dispatch={dispatch}\n              ui={store.ui}\n            />\n          </DndProvider>\n        </div>\n      }\n\n    </div>\n  )\n};\n\nexport default App;\n\n\n\n\n","import React, { useRef } from 'react'\nimport { useDrag, useDrop } from 'react-dnd'\nconst style = {\n  border: '1px solid lightgrey',\n  padding: '0',\n  marginBottom: '-1px',\n\n  backgroundColor: 'white',\n  cursor: 'move',\n}\nexport const Card = ({ id, text, index, moveCard }) => {\n  const ref = useRef(null)\n  const [, drop] = useDrop({\n    accept: 'card',\n    hover(item, monitor) {\n      if (!ref.current) {\n        return\n      }\n      const dragIndex = item.index\n      const hoverIndex = index\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current?.getBoundingClientRect()\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset()\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return\n      }\n      // Time to actually perform the action\n      moveCard(dragIndex, hoverIndex)\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex\n    },\n  })\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: 'card', id, index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n  const opacity = isDragging ? 0 : 1\n  drag(drop(ref))\n  return (\n    <div ref={ref} style={{ ...style, opacity }}>\n      {text}\n    </div>\n  )\n}\n","import './arcInfo.css'\nimport React, { useState, useCallback , useEffect} from 'react'\nimport { Card } from './card'\nimport update from 'immutability-helper'\nimport {EDIT_ARC_PARAMS} from './app'\nconst style = {\n\twidth: 400,\n}\n\n\nexport const ArcInfo = ({arcs,ui,dispatch}) => {\n  const sel = ui.focusArc[ui.focusArc.length -1]\n  const [cards, setCards] = useState(arcs[sel] && arcs[sel].config ? [...arcs[sel].config] : [])\n\n  useEffect(() => {\n    setCards(arcs[sel] && arcs[sel].config ? [...arcs[sel].config] : [])\n  }, [ui,arcs,sel])\n\n  const moveCard = useCallback(\n    (dragIndex, hoverIndex) => {\n      const dragCard = cards[dragIndex]\n      \n      const newdata =  update(cards, {\n        $splice: [\n          [dragIndex, 1],\n          [hoverIndex, 0, dragCard],\n        ],\n      })\n      setCards(newdata)\n      dispatch([EDIT_ARC_PARAMS,\n        {\n          id:sel,\n          field:\"config\",\n          data: newdata\n        }\n      ])\n    },\n    [cards,dispatch,sel],\n  )\n\n  const renderCard = (card, idx) => {\n    return (\n      <Card\n        key={card.id}\n        index={idx}\n        id={card.id}\n        text={card.text}\n        moveCard={moveCard}\n      />\n    )\n  }\n  \n\n  return (\n\n    <div className=\"draglist-container\">\n      <div className=\"numbering-container\">\n      {cards.map(\n        (card, idx) => <div className=\"numbering-item\">{idx}</div>\n      )}\n      </div>\n      <div style={style}>{cards.map(\n        (card, idx) => renderCard(card, idx)\n      )}</div>\n    </div>      \n  )\n}\n","const range = (start, stop, xstep = 1, ystep = 1) => {\n  const a = [],\n    b = [...start];\n\n  const checkidx = xstep === 0 ? 1 : 0\n  if (b[checkidx] < stop[checkidx]) {\n    while (b[checkidx] < stop[checkidx]) {\n      a.push([...b]);\n      b[0] += xstep\n      b[1] += ystep\n\n    }\n    return a;\n  } else {\n    while (b[checkidx] > stop[checkidx]) {\n      a.push([...b]);\n      b[0] += xstep\n      b[1] += ystep\n    }\n    return a;\n  }\n}\n\nconst dist = (a, b) => Math.sqrt((a[0] - b[0]) ** 2 + (a[1] - b[1]) ** 2)\n\nconst genEle = (fl, elength = 1) => {\n  let xstep\n  let ystep\n  const res = []\n  let i\n  for (i = 0; i < fl.length - 1; i++) {\n    const pointDist = dist(fl[i], fl[i + 1])\n    xstep = fl[1 + i][0] === fl[i][0] ?\n      0 : elength * (fl[i + 1][0] - fl[i][0]) / pointDist\n    ystep = fl[1 + i][1] === fl[i][1] ?\n      0 : elength * (fl[i + 1][1] - fl[i][1]) / pointDist\n\n\n    res.push(...range(fl[i], fl[i + 1], xstep, ystep))\n  }\n\n  res.push(fl[i])\n  return res\n}\n\nconst sum = arr => arr.reduce((a, b) => a + b, 0)\n\nconst genSeg = (state, eleCount) => {\n  const totalVol = sum(state.map(i => i[1]))\n  const type = [],\n    midIdx = []\n  let segStartIdx = 0\n  let segEleCount\n  let i = 0\n\n  for (; i < state.length - 1; i++) {\n    segEleCount = Math.floor(state[i][1] / totalVol * (eleCount - state.length))\n    segEleCount = segEleCount > 0 ? segEleCount : 1\n    midIdx.push(Math.floor(segStartIdx + segEleCount / 2))\n    segStartIdx += segEleCount\n    type.push(...Array(segEleCount).fill(state[i][0]))\n  }\n\n  type.push(...Array(eleCount - segStartIdx).fill(state[i][0]))\n  midIdx.push(Math.floor(segStartIdx + (eleCount - segStartIdx) / 2))\n  return [type, midIdx]\n}\n\nconst merge = function(first, second) {\n  let f = 0\n  let s = 0\n  let c = 0\n  const res = []\n  while (f < first.length || s < second.length) {\n    if (s === second.length || first[f] <= second[s]) {\n      if (res[c - 1] !== first[f]) {\n        res[c] = first[f]\n        c += 1\n      }\n      f += 1\n    }\n    if (f === first.length || second[s] <= first[f]) {\n      if (res[c - 1] !== second[s]) {\n        res[c] = second[s]\n        c += 1\n      }\n      s += 1\n    }\n  }\n  return res\n}\n\nconst cumsum = (arr) => {\n  let acc = 0\n  return arr.map(e => {\n    acc += e\n    return acc\n  })\n}\n\nconst getCumulativeVol = (path) => {\n  const lineVolumes = []\n  const lineStates = []\n  for (let i = 0; i < path.length; i++) {\n    const [line, downStNdIdx] = path[i]\n    if (downStNdIdx !== 0) {\n      lineStates.push(...line.initState)\n    } else {\n      lineStates.push(...line.initState.reverse())\n    }\n    lineVolumes.push(line.volume)\n  }\n\n  lineStates.push(['RXX', 10000000]) // ambient RXX is always last fluid in path\n\n  const cumLineVols = cumsum(lineVolumes)\n  const cumFluidVols = cumsum(lineStates.map(e => e[1]))\n  const combinedVols = merge(cumLineVols, cumFluidVols)\n\n  return [lineStates, cumLineVols, cumFluidVols, combinedVols]\n}\n\nexport const runScript = (script, runState, drawing) => {\n\n\n  const setPump = (aspVol) => runState.arcs[pumpId].volume += aspVol\n  const wasteValveId = Object.values(runState.arcs)\n    .find(e => e.type.toLowerCase() === 'valve' && e.name.toLowerCase() === 'waste').id\n\n  const setValves = (valveStateName) => {\n    const valveStates = runState.ValvePortMapping[valveStateName]\n\n    for (let [vName, vId] of valves) {\n      const config = runState.arcs[vId].config\n      const name2Id = runState.arcs[vId].connections[0]\n      runState.arcs[vId].initState = [name2Id[config[0].text]]\n      const activeConnections = runState.arcs[vId].initState\n\n      if (vName === 'rotary') {\n        if (config[valveStates.Port].text !== \"plugged\") {\n          activeConnections.push(\n            name2Id[config[valveStates.Port].text]\n          )\n        }\n      } else {\n        const powered = valveStates.ValvePositions[parseInt(vName.slice(1)) - 1] \n          === \"B\" ? true : false\n        \n        if (config.length === 2 && powered) {\n          activeConnections.push(name2Id[config[1].text])\n        } else if (config.length === 3) {\n          activeConnections.push(name2Id[config[powered ? 2 : 1].text])\n        }\n      }\n    }\n  }\n\n  const dfsPath = (startId) => {\n    const start = runState.arcs[startId]\n    const downStNdIdx = runState.nodes[start.geom[0]].arcs.length === 1 ?\n      start.geom.length - 1 : 0\n    const stack = [\n      [\n        [start, downStNdIdx]\n      ]\n    ]\n\n    while (stack.length) {\n      const path = stack.pop()\n\n      const [prevLine, nodeIdx] = path[path.length - 1]\n\n      const node = runState.nodes[prevLine.geom[nodeIdx]]\n\n      let arcIds = node.arcs\n\n      if (node.valveArc) {\n        let line = runState.arcs[node.valveArc]\n        if (line.initState.includes(prevLine.id) && line.initState.length === 2) {\n          arcIds = [line.initState[line.initState[0] === prevLine.id ? 1 : 0]]\n        } else arcIds = []\n      }\n\n      for (let arcId of arcIds) {\n        if (arcId === prevLine.id) continue\n        const line = runState.arcs[arcId]\n\n        const downStNdIdx = runState.nodes[line.geom[0]].arcs.includes(prevLine.id) ?\n          line.geom.length - 1 : 0\n\n        if (['supply','waste'].includes(line.type) \n          || (line.type === \"sipper\" && !elevatorUp)) {\n\n          return [...path, [line, downStNdIdx]]\n        } else {\n          stack.push([...path, [line, downStNdIdx]])\n        }\n      }\n    }\n  }\n\n  const mergeFluids = (tub) =>{\n    let RXXVol = 0\n    let bulkVol = 0\n    for (let i of tub.initState){\n      if (i[0]!==\"\") bulkVol+=i[1]\n      else RXXVol+=i[1]\n    }  \n\n    tub.initState=[]\n\n    if (bulkVol!==0) tub.initState.push([\"Bulk_Fluid\",bulkVol])  \n    if (RXXVol!==0) tub.initState.push([\"RXX\",RXXVol])     \n  }\n\n  const updateState = (path) => {\n    if (!path) return\n\n    const [lineStates, cumLineVols, cumFluidVols, combinedVols] = getCumulativeVol(path)\n\n    let i = 0\n    let c = 0\n    let d = 0\n    let newSeg = []\n\n    while (d < cumLineVols.length) {\n      newSeg.push(\n        [\n          lineStates[c][0],\n          i > 0 ? combinedVols[i] - combinedVols[i - 1] : combinedVols[i]\n        ]\n      )\n      if (combinedVols[i] === cumFluidVols[c]) c += 1\n\n      if (combinedVols[i] === cumLineVols[d]) {\n        if (newSeg.length > 1) {\n          for (let j = newSeg.length - 2; j >= 0; j--) {\n            if (newSeg[j][0] === newSeg[j + 1][0]) {\n              newSeg[j][1] = newSeg[j][1] + newSeg[j + 1][1]\n              newSeg.splice(j + 1, 1)\n            }\n          }\n        }\n        if (path[d][1] === 0) newSeg = newSeg.reverse()\n\n        runState.arcs[path[d][0].id].initState = newSeg\n\n        if (['pump','waste'].includes(runState.arcs[path[d][0].id].type)){\n          mergeFluids(runState.arcs[path[d][0].id])\n        }\n\n        newSeg = []\n\n        d += 1\n      }\n\n      i += 1\n    }\n  }\n\n  const drawState = (arc, plot, dispPlot) => {\n    if (arc.volume === 0) return \n    const elements = genEle(arc.geom, 10)\n    const [type, midIdx] = genSeg(arc.initState, elements.length-1)\n    const boundaryPts = [0]\n  \n    let j = 0\n    for (; j < type.length - 1; j++) {\n      if (type[j] !== type[j + 1]) boundaryPts.push(j+1)\n    }\n    boundaryPts.push(j+1)\n  \n    let factor, lw, prec\n    if (['supply','waste'].includes(arc.type)){\n      factor=1000\n      lw=10\n      prec = 3\n    } else if (arc.type ==='pump'){\n      factor=1\n      lw=10\n    } else {\n      factor=1\n      lw=2\n    }\n\n    for (j = 0; j < arc.initState.length; j++) {\n      plot.polyline(elements.slice(boundaryPts[j], boundaryPts[j + 1] + 1))\n          .stroke({ width: lw, color: reagents[arc.initState[j][0]].color })\n          .fill('none')\n      if (dispPlot) {\n        dispPlot.polyline(elements.slice(boundaryPts[j], boundaryPts[j + 1] + 1))\n            .stroke({ width: 3, color: reagents[arc.initState[j][0]].color })\n            .fill('none')      \n      }\n    }\n  \n    for (j = 0; j < midIdx.length; j++) {\n      if (arc.type==='supply' && arc.initState[j][0]==='RXX') continue\n      plot.text((arc.initState[j][1]/factor).toPrecision(prec))\n          .font({ size: 10 })\n          .move(...elements[midIdx[j]])\n    }\n  }\n\n  const lineExecTable = {\n    Valve: (param,genPlot,k)=>{\n      setValves(param)\n    },\n    Pull: (param,genPlot,k)=>{\n      setPump(parseInt(param))\n      const path = dfsPath(pumpId)\n      updateState(path)   \n\n      plot.last().remove()\n      const dispPlot = plot.group()\n      path.forEach(([e,_]) => {\n        if (e.type !== 'valve') {\n          e.svgHandle.remove()\n          const linePlot = plot.group()\n\n          drawState(e, linePlot,dispPlot)\n          e.svgHandle = linePlot\n        }\n      })\n      plot.text((k+1).toString())\n            .font({ size: 30 })\n            .move(930,470)\n      if (genPlot) res.push(plot.svg())\n      dispPlot.remove()\n    },\n    Dispense: (param,genPlot,k)=>{\n      const vId = wasteValveId\n      const config = runState.arcs[vId].config\n      const name2Id = runState.arcs[vId].connections[0]\n      runState.arcs[vId].initState = [\n        name2Id[config[0].text],\n        name2Id[config[2].text]\n      ]\n      lineExecTable.Pull(-runState.arcs[pumpId].volume, genPlot,k)\n      runState.arcs[vId].initState = [\n        name2Id[config[0].text],\n        name2Id[config[1].text]\n      ]\n\n    },\n    ElevatorDown: ()=> elevatorUp = false,\n    ElevatorUp: ()=> elevatorUp = true,\n    Wait: ()=>{},\n  }\n\n  window.drawState = drawState\n\n  const reagents = runState.reagents\n  const plot = drawing.group()\n  const res = []\n  let elevatorUp = true\n\n\n  const valves = []\n  Object.values(runState.arcs)\n    .filter(e => e.type.toLowerCase() === 'valve')\n    .forEach(e => valves.push([e.name, e.id]))\n\n  const pumpId = Object.values(runState.arcs)\n    .find(e => e.type.toLowerCase() === 'pump').id\n\n\n\n  Object.values(runState.arcs).forEach(e => {\n    if (e.type.toLowerCase() !== 'valve') {\n      if (e.svgHandle) e.svgHandle.remove()\n      const linePlot = plot.group()\n      drawState(e, linePlot)\n      e.svgHandle = linePlot\n      if (e.type.toLowerCase()==='supply' && e.name.toLowerCase()!=='RXX') {\n        plot.text(e.name)\n        .font({ size: 10 })\n        .move(...e.geom[0])\n        .rotate(90, ...e.geom[0])\n        .dmove(0,-5)\n      }\n    }\n  })\n  \n\n\n\n  plot.text('Initial')\n  .font({ size: 30 })\n  .move(930,470)\n\n  res.push(plot.svg())   \n\n\n  let k = 0\n  while (k<script.length){\n    const line=script[k].split(/\\s+/)\n    if (line.length===0) continue\n    else if (line[0]===\"LoopStart\"){\n      let endfound=false\n      let j=0\n      while (!endfound && k+j+1<script.length){\n        j+=1\n        const lineEnd=script[k+j].split(/\\s+/)\n        if (lineEnd[0]===\"LoopEnd\") endfound=true\n      }\n\n      for (let n=0; n<parseInt(line[1]); n++){\n        for (let m=k+1; m<k+j+1; m++) {\n          const line2 = script[m].split(/\\s+/)\n          if (n===0) {\n            if (lineExecTable[line2[0]]) lineExecTable[line2[0]](line2[1],true,k)\n          } else {\n            if (lineExecTable[line2[0]]) lineExecTable[line2[0]](line2[1],false,k)\n          }\n        }\n      }\n\n      k=k+j+1    \n      continue\n    }\n    if (lineExecTable[line[0]]) lineExecTable[line[0]](line[1],true,k)\n    k+=1\n\n  }\n\n  return res\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}